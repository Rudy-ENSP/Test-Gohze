{"ast":null,"code":"/* jshint node: true */\nvar express = require('express');\n\nvar app = express.application;\n/*\n * expose MiddleEarth\n */\n\nmodule.exports = MiddleEarth;\n/*\n * MiddleEarth\n *\n * @param {Application} app\n * @constructor\n */\n\nfunction MiddleEarth(app) {\n  this.app = app;\n  this.middlewares = [];\n  this.finished = false;\n}\n/*\n * load middlewares\n *\n * #load should ALWAYS be called first or using the short cut app.middlewares([..,..]),\n * it will overwrite any exisiting middlewares in queue\n *\n * @param {Array} mws\n * @return {MiddleEarth}\n */\n\n\nMiddleEarth.prototype.load = function (mws) {\n  var self = this;\n  self.middlewares = [];\n  mws.forEach(function (o, i) {\n    checkName.call(self, o.name);\n    self.middlewares.push(o);\n  });\n  return self;\n};\n/*\n * `use` middlewares to the app\n */\n\n\nMiddleEarth.prototype.finish = function () {\n  var self = this;\n\n  if (self.finished) {\n    console.warn(\"MiddleEarth middlewares have already been applied\");\n  }\n\n  self.middlewares.forEach(function (m, i) {\n    if (m.hasOwnProperty('fn')) {\n      m.fn();\n    } else {\n      var args = [m.cb];\n\n      if (m.hasOwnProperty('path')) {\n        args.splice(0, 0, m.path);\n      }\n\n      self.app.use.apply(self.app, args);\n    }\n  });\n  self.middlewares = [];\n  self.finished = true;\n};\n/*\n * applies the middlewares to the front of the list\n *\n * @param {Array} mws\n * @return {MiddleEarth}\n */\n\n\nMiddleEarth.prototype.prepend = function (mws) {\n  checkNames.call(this, mws);\n  this.middlewares = [].concat.apply(mws, this.middlewares);\n  return this;\n};\n/*\n * applies the middlewares to the end of the list\n *\n * @param {Array} mws\n * @return {MiddleEarth}\n */\n\n\nMiddleEarth.prototype.append = function (mws) {\n  checkNames.call(this, mws);\n  this.middlewares = [].concat.apply(this.middlewares, mws);\n  return this;\n};\n/*\n * overwrites an existing middleware\n *\n * @param {String} name\n * @param {Object} mw\n * @return {MiddleEarth}\n */\n\n\nMiddleEarth.prototype.overwrite = function (name, mw) {\n  var index = indexOf.call(this, name);\n\n  if (index === -1) {\n    return this;\n  }\n\n  if ('function' === typeof mw) {\n    if ('fn' in this.middlewares[index]) {\n      this.middlewares[index].fn = mw;\n    } else {\n      this.middlewares[index].cb = mw;\n    }\n  } else {\n    this.middlewares.splice(index, 1, mw);\n  }\n\n  return this;\n};\n/*\n * inserts a middleware before another\n *\n * @param {String} name\n * @param {Object} mw\n * @return {MiddleEarth}\n */\n\n\nMiddleEarth.prototype.before = insert();\n/*\n * insert a middleware after another\n *\n * @param {String} name\n * @param {Object} mw\n * @return {MiddleEarth}\n */\n\nMiddleEarth.prototype.after = insert(true);\n/*\n * remove a middleware from queue\n *\n * @param {String} name\n * @return {MiddleEarth}\n */\n\nMiddleEarth.prototype.remove = function (name) {\n  var index = indexOf.call(this, name);\n\n  if (index === -1) {\n    return this;\n  }\n\n  this.middlewares.splice(index, 1);\n  return this;\n};\n/*\n * insert method\n *\n * @param {Boolean} after\n * @return {Function}\n */\n\n\nfunction insert(after) {\n  return function (name, mw) {\n    var index = indexOf.call(this, name);\n\n    if (index < 0) {\n      var msg = \"Middleware named `\" + name + \"` could not be found\";\n      throw new Error(msg);\n    }\n\n    checkName.call(this, mw.name);\n\n    if (true === after) {\n      index = index + 1;\n    }\n\n    this.middlewares.splice(index, 0, mw);\n    return this;\n  };\n}\n/*\n * locate middleware\n *\n * @param {String} name\n * @return {Number}\n */\n\n\nfunction indexOf(name) {\n  var middlewares = this.middlewares;\n  var i = 0;\n  var len = middlewares.length;\n\n  for (; i < len; i++) {\n    if (middlewares[i].name === name) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n/*\n * throw error if middleware name exists\n *\n * @param {String} name\n */\n\n\nfunction checkName(name) {\n  if (indexOf.call(this, name) >= 0) {\n    var msg = 'Middleware with name `' + name + '` already exists';\n    throw new Error(msg);\n  }\n}\n/*\n * check for names in array of incoming middlewares (used in prepend/append)\n *\n * @param {Array} mws\n */\n\n\nfunction checkNames(mws) {\n  var self = this;\n  mws.forEach(function (o, i) {\n    checkName.call(self, o.name);\n  });\n}\n/*\n * add method to app\n *\n * @param {Array} mws\n * @return {MiddleEarth}\n */\n\n\napp.middlewares = function (mws) {\n  if (!(this.middleEarth instanceof MiddleEarth)) {\n    this.middleEarth = new MiddleEarth(this);\n  }\n\n  if ('undefined' === typeof mws) {\n    return this.middleEarth;\n  }\n\n  return this.middleEarth.load(mws);\n};","map":{"version":3,"sources":["/home/rudy/Bureau/Test GOHZE/gohze_front/node_modules/middle-earth/index.js"],"names":["express","require","app","application","module","exports","MiddleEarth","middlewares","finished","prototype","load","mws","self","forEach","o","i","checkName","call","name","push","finish","console","warn","m","hasOwnProperty","fn","args","cb","splice","path","use","apply","prepend","checkNames","concat","append","overwrite","mw","index","indexOf","before","insert","after","remove","msg","Error","len","length","middleEarth"],"mappings":"AAAA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,GAAG,GAAGF,OAAO,CAACG,WAAlB;AAGA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,WAAjB;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAT,CAAqBJ,GAArB,EAA0B;AACxB,OAAKA,GAAL,GAAWA,GAAX;AACA,OAAKK,WAAL,GAAmB,EAAnB;AACA,OAAKC,QAAL,GAAgB,KAAhB;AACD;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAF,WAAW,CAACG,SAAZ,CAAsBC,IAAtB,GAA6B,UAASC,GAAT,EAAc;AACzC,MAAIC,IAAI,GAAG,IAAX;AAEAA,EAAAA,IAAI,CAACL,WAAL,GAAmB,EAAnB;AAEAI,EAAAA,GAAG,CAACE,OAAJ,CAAY,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACzBC,IAAAA,SAAS,CAACC,IAAV,CAAeL,IAAf,EAAqBE,CAAC,CAACI,IAAvB;AACAN,IAAAA,IAAI,CAACL,WAAL,CAAiBY,IAAjB,CAAsBL,CAAtB;AACD,GAHD;AAKA,SAAOF,IAAP;AACD,CAXD;AAcA;AACA;AACA;;;AAEAN,WAAW,CAACG,SAAZ,CAAsBW,MAAtB,GAA+B,YAAW;AACxC,MAAIR,IAAI,GAAG,IAAX;;AAEA,MAAIA,IAAI,CAACJ,QAAT,EAAmB;AACjBa,IAAAA,OAAO,CAACC,IAAR,CAAa,mDAAb;AACD;;AAEDV,EAAAA,IAAI,CAACL,WAAL,CAAiBM,OAAjB,CAAyB,UAASU,CAAT,EAAYR,CAAZ,EAAe;AACtC,QAAIQ,CAAC,CAACC,cAAF,CAAiB,IAAjB,CAAJ,EAA4B;AAC1BD,MAAAA,CAAC,CAACE,EAAF;AACD,KAFD,MAEO;AACL,UAAIC,IAAI,GAAG,CAACH,CAAC,CAACI,EAAH,CAAX;;AAEA,UAAIJ,CAAC,CAACC,cAAF,CAAiB,MAAjB,CAAJ,EAA8B;AAC5BE,QAAAA,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkBL,CAAC,CAACM,IAApB;AACD;;AAEDjB,MAAAA,IAAI,CAACV,GAAL,CAAS4B,GAAT,CAAaC,KAAb,CAAmBnB,IAAI,CAACV,GAAxB,EAA6BwB,IAA7B;AACD;AACF,GAZD;AAcAd,EAAAA,IAAI,CAACL,WAAL,GAAmB,EAAnB;AACAK,EAAAA,IAAI,CAACJ,QAAL,GAAgB,IAAhB;AACD,CAvBD;AA0BA;AACA;AACA;AACA;AACA;AACA;;;AAEAF,WAAW,CAACG,SAAZ,CAAsBuB,OAAtB,GAAgC,UAASrB,GAAT,EAAc;AAC5CsB,EAAAA,UAAU,CAAChB,IAAX,CAAgB,IAAhB,EAAsBN,GAAtB;AAEA,OAAKJ,WAAL,GAAmB,GAAG2B,MAAH,CAAUH,KAAV,CAAgBpB,GAAhB,EAAqB,KAAKJ,WAA1B,CAAnB;AAEA,SAAO,IAAP;AACD,CAND;AASA;AACA;AACA;AACA;AACA;AACA;;;AAEAD,WAAW,CAACG,SAAZ,CAAsB0B,MAAtB,GAA+B,UAASxB,GAAT,EAAc;AAC3CsB,EAAAA,UAAU,CAAChB,IAAX,CAAgB,IAAhB,EAAsBN,GAAtB;AAEA,OAAKJ,WAAL,GAAmB,GAAG2B,MAAH,CAAUH,KAAV,CAAgB,KAAKxB,WAArB,EAAkCI,GAAlC,CAAnB;AAEA,SAAO,IAAP;AACD,CAND;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAL,WAAW,CAACG,SAAZ,CAAsB2B,SAAtB,GAAkC,UAASlB,IAAT,EAAemB,EAAf,EAAmB;AACnD,MAAIC,KAAK,GAAGC,OAAO,CAACtB,IAAR,CAAa,IAAb,EAAmBC,IAAnB,CAAZ;;AACA,MAAIoB,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,WAAO,IAAP;AACD;;AAED,MAAI,eAAe,OAAOD,EAA1B,EAA8B;AAC5B,QAAI,QAAQ,KAAK9B,WAAL,CAAiB+B,KAAjB,CAAZ,EAAqC;AACnC,WAAK/B,WAAL,CAAiB+B,KAAjB,EAAwBb,EAAxB,GAA6BY,EAA7B;AACD,KAFD,MAEO;AACL,WAAK9B,WAAL,CAAiB+B,KAAjB,EAAwBX,EAAxB,GAA6BU,EAA7B;AACD;AACF,GAND,MAMQ;AACN,SAAK9B,WAAL,CAAiBqB,MAAjB,CAAwBU,KAAxB,EAA+B,CAA/B,EAAkCD,EAAlC;AACD;;AAED,SAAO,IAAP;AACD,CAjBD;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA/B,WAAW,CAACG,SAAZ,CAAsB+B,MAAtB,GAA+BC,MAAM,EAArC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAnC,WAAW,CAACG,SAAZ,CAAsBiC,KAAtB,GAA8BD,MAAM,CAAC,IAAD,CAApC;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEAnC,WAAW,CAACG,SAAZ,CAAsBkC,MAAtB,GAA+B,UAASzB,IAAT,EAAe;AAC5C,MAAIoB,KAAK,GAAGC,OAAO,CAACtB,IAAR,CAAa,IAAb,EAAmBC,IAAnB,CAAZ;;AAEA,MAAIoB,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,WAAO,IAAP;AACD;;AAED,OAAK/B,WAAL,CAAiBqB,MAAjB,CAAwBU,KAAxB,EAA+B,CAA/B;AAEA,SAAO,IAAP;AACD,CAVD;AAaA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASG,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,SAAO,UAASxB,IAAT,EAAemB,EAAf,EAAmB;AACxB,QAAIC,KAAK,GAAGC,OAAO,CAACtB,IAAR,CAAa,IAAb,EAAmBC,IAAnB,CAAZ;;AAEA,QAAIoB,KAAK,GAAG,CAAZ,EAAe;AACb,UAAIM,GAAG,GAAG,uBAAqB1B,IAArB,GAA0B,sBAApC;AACA,YAAM,IAAI2B,KAAJ,CAAUD,GAAV,CAAN;AACD;;AAED5B,IAAAA,SAAS,CAACC,IAAV,CAAe,IAAf,EAAqBoB,EAAE,CAACnB,IAAxB;;AAEA,QAAI,SAASwB,KAAb,EAAoB;AAClBJ,MAAAA,KAAK,GAAGA,KAAK,GAAC,CAAd;AACD;;AAED,SAAK/B,WAAL,CAAiBqB,MAAjB,CAAwBU,KAAxB,EAA+B,CAA/B,EAAkCD,EAAlC;AAEA,WAAO,IAAP;AACD,GAjBD;AAkBD;AAGD;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASE,OAAT,CAAiBrB,IAAjB,EAAuB;AACrB,MAAIX,WAAW,GAAG,KAAKA,WAAvB;AACA,MAAIQ,CAAC,GAAG,CAAR;AACA,MAAI+B,GAAG,GAAGvC,WAAW,CAACwC,MAAtB;;AAEA,SAAMhC,CAAC,GAAC+B,GAAR,EAAa/B,CAAC,EAAd,EAAkB;AAChB,QAAIR,WAAW,CAACQ,CAAD,CAAX,CAAeG,IAAf,KAAwBA,IAA5B,EAAkC;AAChC,aAAOH,CAAP;AACD;AACF;;AAED,SAAO,CAAC,CAAR;AACD;AAGD;AACA;AACA;AACA;AACA;;;AAEA,SAASC,SAAT,CAAmBE,IAAnB,EAAyB;AACvB,MAAIqB,OAAO,CAACtB,IAAR,CAAa,IAAb,EAAmBC,IAAnB,KAA4B,CAAhC,EAAmC;AACjC,QAAI0B,GAAG,GAAG,2BAAyB1B,IAAzB,GAA8B,kBAAxC;AACA,UAAM,IAAI2B,KAAJ,CAAUD,GAAV,CAAN;AACD;AACF;AAGD;AACA;AACA;AACA;AACA;;;AAEA,SAASX,UAAT,CAAoBtB,GAApB,EAAyB;AACvB,MAAIC,IAAI,GAAG,IAAX;AAEAD,EAAAA,GAAG,CAACE,OAAJ,CAAY,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACzBC,IAAAA,SAAS,CAACC,IAAV,CAAeL,IAAf,EAAqBE,CAAC,CAACI,IAAvB;AACD,GAFD;AAGD;AAGD;AACA;AACA;AACA;AACA;AACA;;;AAEAhB,GAAG,CAACK,WAAJ,GAAkB,UAASI,GAAT,EAAc;AAC9B,MAAI,EAAE,KAAKqC,WAAL,YAA4B1C,WAA9B,CAAJ,EAAgD;AAC9C,SAAK0C,WAAL,GAAmB,IAAI1C,WAAJ,CAAgB,IAAhB,CAAnB;AACD;;AAED,MAAI,gBAAgB,OAAOK,GAA3B,EAAgC;AAC9B,WAAO,KAAKqC,WAAZ;AACD;;AAED,SAAO,KAAKA,WAAL,CAAiBtC,IAAjB,CAAsBC,GAAtB,CAAP;AACD,CAVD","sourcesContent":["/* jshint node: true */\n\nvar express = require('express');\nvar app = express.application;\n\n\n/*\n * expose MiddleEarth\n */\n\nmodule.exports = MiddleEarth;\n\n\n/*\n * MiddleEarth\n *\n * @param {Application} app\n * @constructor\n */\n\nfunction MiddleEarth(app) {\n  this.app = app;\n  this.middlewares = [];\n  this.finished = false;\n}\n\n\n/*\n * load middlewares\n *\n * #load should ALWAYS be called first or using the short cut app.middlewares([..,..]),\n * it will overwrite any exisiting middlewares in queue\n *\n * @param {Array} mws\n * @return {MiddleEarth}\n */\n\nMiddleEarth.prototype.load = function(mws) {\n  var self = this;\n\n  self.middlewares = [];\n\n  mws.forEach(function(o, i) {\n    checkName.call(self, o.name);\n    self.middlewares.push(o);\n  });\n\n  return self;\n};\n\n\n/*\n * `use` middlewares to the app\n */\n\nMiddleEarth.prototype.finish = function() {\n  var self = this;\n\n  if (self.finished) {\n    console.warn(\"MiddleEarth middlewares have already been applied\");\n  }\n\n  self.middlewares.forEach(function(m, i) {\n    if (m.hasOwnProperty('fn')) {\n      m.fn();\n    } else {\n      var args = [m.cb];\n\n      if (m.hasOwnProperty('path')) {\n        args.splice(0, 0, m.path);\n      }\n\n      self.app.use.apply(self.app, args);\n    }\n  });\n\n  self.middlewares = [];\n  self.finished = true;\n};\n\n\n/*\n * applies the middlewares to the front of the list\n *\n * @param {Array} mws\n * @return {MiddleEarth}\n */\n\nMiddleEarth.prototype.prepend = function(mws) {\n  checkNames.call(this, mws);\n\n  this.middlewares = [].concat.apply(mws, this.middlewares);\n\n  return this;\n};\n\n\n/*\n * applies the middlewares to the end of the list\n *\n * @param {Array} mws\n * @return {MiddleEarth}\n */\n\nMiddleEarth.prototype.append = function(mws) {\n  checkNames.call(this, mws);\n\n  this.middlewares = [].concat.apply(this.middlewares, mws);\n\n  return this;\n};\n\n\n/*\n * overwrites an existing middleware\n *\n * @param {String} name\n * @param {Object} mw\n * @return {MiddleEarth}\n */\n\nMiddleEarth.prototype.overwrite = function(name, mw) {\n  var index = indexOf.call(this, name);\n  if (index === -1) {\n    return this;\n  }\n\n  if ('function' === typeof mw) {\n    if ('fn' in this.middlewares[index]) {\n      this.middlewares[index].fn = mw;\n    } else {\n      this.middlewares[index].cb = mw;\n    }\n  } else  {\n    this.middlewares.splice(index, 1, mw);\n  }\n\n  return this;\n};\n\n\n/*\n * inserts a middleware before another\n *\n * @param {String} name\n * @param {Object} mw\n * @return {MiddleEarth}\n */\n\nMiddleEarth.prototype.before = insert();\n\n\n/*\n * insert a middleware after another\n *\n * @param {String} name\n * @param {Object} mw\n * @return {MiddleEarth}\n */\n\nMiddleEarth.prototype.after = insert(true);\n\n\n/*\n * remove a middleware from queue\n *\n * @param {String} name\n * @return {MiddleEarth}\n */\n\nMiddleEarth.prototype.remove = function(name) {\n  var index = indexOf.call(this, name);\n\n  if (index === -1) {\n    return this;\n  }\n\n  this.middlewares.splice(index, 1);\n\n  return this;\n};\n\n\n/*\n * insert method\n *\n * @param {Boolean} after\n * @return {Function}\n */\n\nfunction insert(after) {\n  return function(name, mw) {\n    var index = indexOf.call(this, name);\n\n    if (index < 0) {\n      var msg = \"Middleware named `\"+name+\"` could not be found\";\n      throw new Error(msg);\n    }\n\n    checkName.call(this, mw.name);\n\n    if (true === after) {\n      index = index+1;\n    }\n\n    this.middlewares.splice(index, 0, mw);\n\n    return this;\n  };\n}\n\n\n/*\n * locate middleware\n *\n * @param {String} name\n * @return {Number}\n */\n\nfunction indexOf(name) {\n  var middlewares = this.middlewares;\n  var i = 0;\n  var len = middlewares.length;\n\n  for(; i<len; i++) {\n    if (middlewares[i].name === name) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n\n/*\n * throw error if middleware name exists\n *\n * @param {String} name\n */\n\nfunction checkName(name) {\n  if (indexOf.call(this, name) >= 0) {\n    var msg = 'Middleware with name `'+name+'` already exists';\n    throw new Error(msg);\n  }\n}\n\n\n/*\n * check for names in array of incoming middlewares (used in prepend/append)\n *\n * @param {Array} mws\n */\n\nfunction checkNames(mws) {\n  var self = this;\n\n  mws.forEach(function(o, i) {\n    checkName.call(self, o.name);\n  });\n}\n\n\n/*\n * add method to app\n *\n * @param {Array} mws\n * @return {MiddleEarth}\n */\n\napp.middlewares = function(mws) {\n  if (!(this.middleEarth instanceof MiddleEarth)) {\n    this.middleEarth = new MiddleEarth(this);\n  }\n\n  if ('undefined' === typeof mws) {\n    return this.middleEarth;\n  }\n\n  return this.middleEarth.load(mws);\n};\n\n"]},"metadata":{},"sourceType":"script"}